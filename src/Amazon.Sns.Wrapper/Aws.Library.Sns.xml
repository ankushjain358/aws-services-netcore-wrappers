<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Amazon.Sns.Wrapper</name>
    </assembly>
    <members>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.CreatePlatformApplicationAsync(System.String,Amazon.Sns.Wrapper.Models.NotificationPlatform,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a platform application object for one of the supported push notification
            services, such as APNS and GCM (Firebase Cloud Messaging), to which devices and
            mobile apps may register. 
            </summary>
            <param name="name">Name of Platform Application</param>
            <param name="platform">Platform type</param>
            <param name="attributes">Properties/Attributes of Platform Application</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns Platform Application Arn</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.CreatePlatformEndpointAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                Creates an endpoint for a device and mobile app on one of the supported push
                notification services, such as GCM (Firebase Cloud Messaging) and APNS.
                CreatePlatformEndpoint
                requires the
                PlatformApplicationArn
                that is returned from
                CreatePlatformApplication
                . You can use the returned
                EndpointArn
                to send a message to a mobile app or by the
                Subscribe
                action for subscription to a topic. The
                CreatePlatformEndpoint
                action is idempotent, so if the requester already owns an endpoint with the same
                device token and attributes, that endpoint's ARN is returned without creating
                a new endpoint. For more information, see Using Amazon SNS Mobile Push Notifications.
                When using
                CreatePlatformEndpoint
                with Baidu, two attributes must be provided: ChannelId and UserId. The token
                field must also contain the ChannelId. For more information, see Creating an
                Amazon SNS Endpoint for Baidu.
            </summary>
            <param name="platformApplicationArn">Platform Application Arn</param>
            <param name="token">Token</param>
            <param name="description">Description</param>
            <param name="attributes">Attributes for an Endpoint</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns Platform Endpoint Arn</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.DeletePlatformApplicationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
              Deletes a platform application object for one of the supported push notification
                services, such as APNS and GCM (Firebase Cloud Messaging). For more information,
                see Using Amazon SNS Mobile Push Notifications.
            </summary>
            <param name="platformApplicationArn">Platform Application Arn</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns true if Platform Application is delerted sucessfully</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.DeleteEndpointAsync(System.String,System.Threading.CancellationToken)">
            <summary>
             Deletes the endpoint for a device and mobile app from Amazon SNS. This action
                is idempotent. For more information, see Using Amazon SNS Mobile Push Notifications.
                When you delete an endpoint that is also subscribed to a topic, then you must
                also unsubscribe the endpoint from the topic.
            </summary>
            <param name="endpointArn">Platform Endpoint Arn</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns true if Platform Endpoint is delerted sucessfully</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.GetPlatformApplicationAttributesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves the attributes of the platform application object for the supported
                push notification services, such as APNS and GCM (Firebase Cloud Messaging).
                For more information, see Using Amazon SNS Mobile Push Notifications.
            </summary>
            <param name="platformApplicationArn">Platform Application Arn</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>list of Properties/Attributes of Platform Application</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.GetEndpointAttributesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves the endpoint attributes for a device on one of the supported push notification
                services, such as GCM (Firebase Cloud Messaging) and APNS. For more information,
                see Using Amazon SNS Mobile Push Notifications.
            </summary>
            <param name="endpointArn">Platform Endpoint Arn</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>list of Properties/Attributes of Platform Endpoint</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.SetPlatformApplicationAttributesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the attributes of the platform application object for the supported push
                notification services, such as APNS and GCM (Firebase Cloud Messaging). For more
                information, see Using Amazon SNS Mobile Push Notifications. For information
                on configuring attributes for message delivery status, see Using Amazon SNS Application
                Attributes for Message Delivery Status.
            </summary>
            <param name="platformApplicationArn">Platform Aplication Arn</param>
            <param name="attributes">Properties or Attributes to be attached</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns true if the attributes are set sucessfully to platform Application</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.SetEndpointAttributesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Sets the attributes for an endpoint for a device on one of the supported push
                notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more
                information, see Using Amazon SNS Mobile Push Notifications.
            </summary>
            <param name="endpointArn">Platform Endpoint Arn</param>
            <param name="attributes">Properties or Attributes</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns true if the attributes are set sucessfully to platform Endpoint</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.ListPlatformApplicationsAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
             Lists the platform application objects for the supported push notification services,
                such as APNS and GCM (Firebase Cloud Messaging). The results for
                ListPlatformApplications
                are paginated and return a limited list of applications, up to 100. If additional
                records are available after the first page results, then a NextToken string will
                be returned. To receive the next pages as well, specify maxrecords parameter
                For more information, see Using Amazon SNS Mobile Push Notifications.
                This action is throttled at 15 transactions per second (TPS).
            </summary>
            <param name="maxRecords">Maximum Records to be returned</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>List of Platform Applications</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.IMobilePushNotification.ListEndpointsByPlatformApplicationAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Lists the endpoints and endpoint attributes for devices in a supported push notification
                service, such as GCM (Firebase Cloud Messaging) and APNS
            ListEndpointsByPlatformApplication
                are paginated and return a limited list of applications, up to 100. If additional
                records are available after the first page results, then a NextToken string will
                be returned. To receive the next pages as well, specify maxrecords parameter
                For more information, see Using Amazon SNS Mobile Push Notifications.
                This action is throttled at 15 transactions per second (TPS).
            </summary>
            <param name="platformApplicationArn">Platform Application Arn</param>
            <param name="maxRecords">Max Records</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>List of Platform Endpoints of an application</returns>
        </member>
        <member name="T:Amazon.Sns.Wrapper.Interfaces.INotificationService">
            <summary>
            Interface of NotificationService class
            </summary>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationService.CreateTopicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates new SNS Topic if not already exists
            </summary>
            <param name="name">Topic Name</param>
            <param name="cancellationToken">Cancellation Token (Optional)</param>
            <returns>INotificationTopic instance of newly created Topic</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationService.GetTopicAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Topic by name
            </summary>
            <param name="name">Topic Name</param>
            <param name="cancellationToken"></param>
            <returns>INotificationTopic instance</returns>
        </member>
        <member name="P:Amazon.Sns.Wrapper.Interfaces.INotificationService.PushNotification">
            <summary>
            Gets PushNotification Service instance to perform mobile push notifications operations
            </summary>
        </member>
        <member name="T:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription">
            <summary>
            Interface of NotificationSubscription class
            </summary>
        </member>
        <member name="P:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription.Arn">
            <summary>
            Gets Arn of SNS Subscription 
            </summary>
        </member>
        <member name="P:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription.Endpoint">
            <summary>
            Gets Endpoint of SNS Subscription 
            </summary>
        </member>
        <member name="P:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription.Protocol">
            <summary>
            Gets Protocol of SNS Subscription 
            </summary>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription.UnsubscribeAsync(System.Threading.CancellationToken)">
            <summary>
               Deletes a subscription. If the subscription requires authentication for deletion,
                only the owner of the subscription or the topic's owner can unsubscribe, and
                an Amazon Web Services signature is required. If the
                Unsubscribe
               call does not require authentication and the requester is not the subscription
                owner, a final cancellation message is delivered to the endpoint, so that the
                endpoint owner can easily resubscribe to the topic if the
                Unsubscribe
                request was unintended.
               This action is throttled at 100 transactions per second (TPS).
            </summary>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
               notice of cancellation.</param>
            <returns>Returns true if the Http response is Ok</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription.GetAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all of the properties of a subscription.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Attributes/Properties of a Subscription</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationSubscription.AddAtrributeAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
              Allows a subscription owner to set an attribute of the subscription to a new value.
             </summary>
             <param name="attributeName"> 
                 A map of attributes with their corresponding values. The following lists the
                 names, descriptions, and values of the special request parameters that this action
                 uses:
                 DeliveryPolicy
                 – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S
                 endpoints.
                 FilterPolicy
                 – The simple JSON object that lets your subscriber receive only a subset of messages,
                 rather than receiving every message published to the topic.
                 RawMessageDelivery
                 – When set to
                 true
                 , enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates
                 the need for the endpoints to process JSON formatting, which is otherwise created
                 for Amazon SNS metadata.
                 RedrivePolicy
                 – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter
                 queue. Messages that can't be delivered due to client errors (for example, when
                 the subscribed endpoint is unreachable) or server errors (for example, when the
                 service that powers the subscribed endpoint becomes unavailable) are held in
                 the dead-letter queue for further analysis or reprocessing. The following attribute
                 applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:
                 SubscriptionRoleArn
                 – The ARN of the IAM role that has the following: Permission to write to the
                 Kinesis Data Firehose delivery stream Amazon SNS listed as a trusted entity Specifying
                 a valid ARN for this attribute is required for Kinesis Data Firehose delivery
                 stream subscriptions. For more information, see Fanout to Kinesis Data Firehose
                 delivery streams in the Amazon SNS Developer Guide.
            </param>
             <param name="attributeValue">The new value for the attribute in JSON format.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive
                 notice of cancellation.</param>
             <returns></returns>
        </member>
        <member name="T:Amazon.Sns.Wrapper.Interfaces.INotificationTopic">
            <summary>
            Interface for NotificationTopic class
            </summary>
        </member>
        <member name="P:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.Arn">
            <summary>
            Gets Arn of SNS Topic
            </summary>
        </member>
        <member name="P:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.Name">
            <summary>
            Gets Name of SNS Topic
            </summary>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.AddPermissionAsync(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            Adds a statement to a topic's access control policy, granting access for the
                specified accounts to the specified actions.
            </summary>
            <param name="label"> A unique identifier for the new policy statement.</param>
            <param name="awsAccountId">The account IDs of the users (principals) who will be given access to the specified
                actions. The users must have account, but do not need to be signed up for this
                service.</param>
            <param name="actionName">The action you want to allow for the specified principal(s). Valid values: Any
                Amazon SNS action name, for example
                Publish</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns true if the HTTP Response Status is OK</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.RemovePermissionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a statement from a topic's access control policy.
            </summary>
            <param name="label"> The unique label of the statement you want to remove.</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns true if the HTTP Response Status is OK</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.GetAttributesAsync(System.Threading.CancellationToken)">
            <summary>
            -Returns all of the properties of a topic. Topic properties returned might differ
                based on the authorization of the user.
            </summary>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Properties/Atributes of SNS Topic</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.SubscribeAsync(Amazon.Sns.Wrapper.Models.NotificationProtocol,System.String,System.Threading.CancellationToken)">
            <summary>
                Subscribes an endpoint to an Amazon SNS topic. If the endpoint type is HTTP/S
                or email, or if the endpoint and the topic are not in the same account, the endpoint
                owner must run the
                ConfirmSubscription
                action to confirm the subscription.
                You call the
                ConfirmSubscription
                action with the token from the subscription response. Confirmation tokens are
                valid for three days.
               This action is throttled at 100 transactions per second (TPS).
            </summary>
            <param name="protocol">The protocol that you want to use. Supported protocols include:
                http
                – delivery of JSON-encoded message via HTTP POST
                https
                – delivery of JSON-encoded message via HTTPS POST
                email
                – delivery of message via SMTP
                email-json
                – delivery of JSON-encoded message via SMTP
                sms
                – delivery of message via SMS
                sqs
                – delivery of JSON-encoded message to an Amazon SQS queue
                application
                – delivery of JSON-encoded message to an EndpointArn for a mobile app and device
                lambda
                – delivery of JSON-encoded message to an Lambda function
                firehose
                – delivery of JSON-encoded message to an Amazon Kinesis Data Firehose delivery
                stream.</param>
            <param name="endpoint">The endpoint that you want to receive notifications. Endpoints vary by protocol:
                For the
                http
                protocol, the (public) endpoint is a URL beginning with
                http://
                . For the
                https
                protocol, the (public) endpoint is a URL beginning with
                https://
                . For the
                email
                protocol, the endpoint is an email address. For the
               email-json
                protocol, the endpoint is an email address. For the
                sms
                protocol, the endpoint is a phone number of an SMS-enabled device. For the
                sqs
                protocol, the endpoint is the ARN of an Amazon SQS queue. For the
                application
                protocol, the endpoint is the EndpointArn of a mobile app and device. For the
                lambda
                protocol, the endpoint is the ARN of an Lambda function. For the
                firehose
                protocol, the endpoint is the ARN of an Amazon Kinesis Data Firehose delivery
                stream.</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns INotificationSubscription instance of newly created SNS Subscription</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.ConfirmSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
               Verifies an endpoint owner's intent to receive messages by validating the token
                sent to the endpoint by an earlier
                Subscribe
                action. If the token is valid, the action creates a new subscription and returns
                its Amazon Resource Name (ARN). This call requires an AWS signature only when
                the
                AuthenticateOnUnsubscribe
                flag is set to "true".
            </summary>
            <param name="token">Short-lived token sent to an endpoint during the Subscribe action.</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns INotificationSubscription instance of confirmed SNS Subscription</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.ListSubscriptionsAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
               Returns a list of the subscriptions to a specific topic. Each call returns a
                limited list of subscriptions, up to 100. If there are more subscriptions, a
                NextToken is also returned. Use the
                MaxRecords parameter to get further results using tokens returned.
                This action is throttled at 30 transactions per second (TPS).
            </summary>
            <param name="maxRecords">Maximum records to be returned (default 100)</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>List of INotificationSubscription instances of a given SNS Topic</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.PublishAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
                Sends a message to an Amazon SNS topic, a text message (SMS message) directly
                to a phone number, or a message to a mobile platform endpoint (when you specify
                the
                TargetArn
                ).
                If you send a message to a topic, Amazon SNS delivers the message to each endpoint
                that is subscribed to the topic. The format of the message depends on the notification
                protocol for each subscribed endpoint.
                When a
                messageId
                is returned, the message has been saved and Amazon SNS will attempt to deliver
                it shortly.
                To use the
                Publish
                action for sending a message to a mobile endpoint, such as an app on a Kindle
                device or mobile phone, you must specify the EndpointArn for the TargetArn parameter.
                The EndpointArn is returned when making a call with the
                CreatePlatformEndpoint
                action.
                For more information about formatting messages, see Send Custom Platform-Specific
                Payloads in Messages to Mobile Devices.
                You can publish messages only to topics and endpoints in the same Region.
            </summary>
            <typeparam name="T">Type of Message</typeparam>
            <param name="message"> The message you want to send. If you are publishing to a topic and you want to
                send the same message to all transport protocols, include the text of the message
                as a String value. If you want to send different messages for each transport
                protocol, set the value of the
                MessageStructure
                parameter to
                json
                and use a JSON object for the
                Message
                parameter. Constraints: With the exception of SMS, messages must be UTF-8 encoded
                strings and at most 256 KB in size (262,144 bytes, not 262,144 characters). For
                SMS, each message can contain up to 140 characters. This character limit depends
                on the encoding schema. For example, an SMS message can contain 160 GSM characters,
                140 ASCII characters, or 70 UCS-2 characters. If you publish a message that exceeds
                this size limit, Amazon SNS sends the message as multiple messages, each fitting
                within the size limit. Messages aren't truncated mid-word but are cut off at
                whole-word boundaries. The total size limit for a single SMS
                Publish
                action is 1,600 characters. JSON-specific constraints: Keys in the JSON object
                that correspond to supported transport protocols must have simple JSON string
                values. The values will be parsed (unescaped) before they are used in outgoing
                messages. Outbound notifications are JSON encoded (meaning that the characters
                will be reescaped for sending). Values have a minimum length of 0 (the empty
                string, "", is allowed). Values have a maximum length bounded by the overall
                message size (so, including multiple protocols may limit message sizes). Non-string
                values will cause the key to be ignored. Keys that do not correspond to supported
                transport protocols are ignored. Duplicate keys are not allowed. Failure to parse
                or validate any key or value in the message will cause the
                Publish
                call to return an error (no partial delivery).</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>Returns SNS messageId for the message published</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes a topic and all its subscriptions. Deleting a topic might prevent some
                messages previously sent to the topic from being delivered to subscribers. This
                action is idempotent, so deleting a topic that does not exist does not result
                in an error.
            </summary>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns>returns true if the Topic is deleted sucessfully</returns>
        </member>
        <member name="M:Amazon.Sns.Wrapper.Interfaces.INotificationTopic.AddAttributeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Allows a topic owner to set an attribute of the topic to a new value.
            </summary>
            <param name="attributeName">A map of attributes with their corresponding values. The following lists the
                names, descriptions, and values of the special request parameters that the
                SetTopicAttributes
                action uses:
                DeliveryPolicy
                – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S
                endpoints.
                DisplayName
                – The display name to use for a topic with SMS subscriptions.
                Policy
                – The policy that defines who can access your topic. By default, only the topic
                owner can publish or subscribe to the topic. The following attribute applies
                only to server-side-encryption:
                KmsMasterKeyId
                – The ID of an Amazon Web Services managed customer master key (CMK) for Amazon
                SNS or a custom CMK. For more information, see Key Terms. For more examples,
                see KeyId in the Key Management Service API Reference. The following attribute
                applies only to FIFO topics:
                ContentBasedDeduplication
                – Enables content-based deduplication for FIFO topics. By default,
                ContentBasedDeduplication
                is set to
                false
                . If you create a FIFO topic and this attribute is
                false
                , you must specify a value for the
                MessageDeduplicationId
                parameter for the Publish action. When you set
                ContentBasedDeduplication
                to
                true
                , Amazon SNS uses a SHA-256 hash to generate the
                MessageDeduplicationId
                using the body of the message (but not the attributes of the message). (Optional)
                To override the generated value, you can specify a value for the
                MessageDeduplicationId
                parameter for the Publish action.</param>
            <param name="attributeValue">The new value for the attribute.</param>
            <param name="cancellationToken"> A cancellation token that can be used by other objects or threads to receive
                notice of cancellation.</param>
            <returns></returns>
        </member>
    </members>
</doc>
